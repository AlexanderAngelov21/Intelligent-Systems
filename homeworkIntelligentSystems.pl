%5 точки / Задача1. Дефинирайте предикат,
% определящ N-я елемент в даден списък при известно N.
element_N(1,[X|_],X):-!.
element_N(N,[_|T],X):-N>1,N1 is N-1,element_N(N1,T,X).
%5 точки / Задача 2. Пресмятане на сумата от елементите на списък от числа
suma([], 0).
suma([H|T], Sum) :-
   suma(T, X),
   Sum is H + X.
%5 точки / Задача 3. Реализирайте предикат, който има два аргумента списъци, като вторият е
% пермутация на първия. Направете предиката така че при свободен втори аргумент и
% при всевъзможните преудовлетворявания във втория аргумент да се връщат
% всевъзможните пермутации на първия.
permytaciq([],[]).
permytaciq(L,[H|T]):-append(A,[H|B], L), append(A,B,C), permytaciq(C,T).
%Задача 4:
спортистИме(алекс). 

спортистИме(бобо). 

спортистИме(васил). 

спортистИме(гого). 

спортистИме(део). 

специалностИме(филолог). 

специалностИме(юрист). 

специалностИме(информатик). 

специалностИме(математик). 

специалностИме(физик). 

  

позиция(1). 

позиция(2). 

позиция(3). 

позиция(4). 

позиция(5). 

even(А) :- 0 is mod(А, 2). 

odd(А) :- 1 is mod(А, 2). 

  

unique(X,Y,Z,M,N):- 
	not(X=Y),not(X=Z),not(X=M),not(X=N), 
    not(Y=Z),not(Y=M),not(Y=N), 
    not(Z=M),not(Z=N), 
    not(M=N). 

резултат(S):-  
    S = [студент(A,Aпозиция, Aспециалност), 
          студент(B,Bпозиция, Bспециалност), 
          студент(C,Cпозиция, Cспециалност), 
          студент(D,Dпозиция, Dспециалност), 
          студент(E,Eпозиция, Eспециалност)], 
      	спортистИме(A),спортистИме(B),спортистИме(C),спортистИме(D),спортистИме(E), 
    	unique(A,B,C,D,E),  
   		специалностИме(Aспециалност), 
    	специалностИме(Bспециалност), 
    	специалностИме(Cспециалност), 
      	специалностИме(Dспециалност),
    	специалностИме(Eспециалност), 
    	unique(Aспециалност, 
               Bспециалност, 
               Cспециалност, 
               Dспециалност, 
               Eспециалност), 
    	позиция(Aпозиция), 
  	  	позиция(Bпозиция), 
   		позиция(Cпозиция), 
     	позиция(Dпозиция), 
   		позиция(Eпозиция), 
    	unique(Aпозиция,Bпозиция,Cпозиция,Dпозиция,Eпозиция), 
    	member(студент(бобо, БобоПозиция,_),S), 
  		member(студент(алекс, АлексПозиция, _),S), 
    	member(студент(део, ДеоПозиция,_),S), 
   	    member(студент(васил, ВасилПозиция,_),S),     	 
    	member(студент(_,МатематикПозиция, математик),S), 
    	member(студент(_, ФизикПозиция, физик),S), 
    	member(студент(_,ФилологПозиция, филолог),S), 
		member(студент(_,ЮристПозиция, юрист), S), 
    	member(студент(_, ИнформатикПозиция, информатик),S),     
		ФизикПозиция =:= ДеоПозиция - 2, 

		ИнформатикПозиция  =:= (ВасилПозиция - 3),   	
    	ФилологПозиция < БобоПозиция, 

    	ЮристПозиция > БобоПозиция,  

		НамиранеБобоПозиция is ЮристПозиция - БобоПозиция, 

    	БобоПозиция =:= (ФилологПозиция + НамиранеБобоПозиция),
        even(АлексПозиция), 

        odd(МатематикПозиция), !.
:- use_rendering(table,[header(студент('Име', 'Позиция','Специалност') )]).